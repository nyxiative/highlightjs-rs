#!/usr/bin/gawk -f
BEGIN {
	print "#[cfg(test)]\nmod lookup {\n\tuse crate::exact as exactfn;\n\tuse crate::case_insensitive as case_insensitivefn;\n\n\t#[test]\n\tfn exact() {\n\t\tassert_eq!(exactfn(\"Rust\"), Some(\"rust\"));\n\t\tassert_eq!(exactfn(\"Swift\"), Some(\"swift\"));\n\t\tassert_eq!(exactfn(\"TypeScript\"), Some(\"typescript\"));\n\t\tassert_eq!(exactfn(\"C++\"), Some(\"cpp\"));\n\t\tassert_eq!(exactfn(\"Python\"), Some(\"python\"));\n\t}\n\n\t#[test]\n\tfn case_insensitive() {\n\t\tassert_eq!(case_insensitivefn(\"rust\"), Some(\"rust\"));\n\t\tassert_eq!(case_insensitivefn(\"RuSt\"), Some(\"rust\"));\n\t\tassert_eq!(case_insensitivefn(\"swift\"), Some(\"swift\"));\n\t\tassert_eq!(case_insensitivefn(\"sWifT\"), Some(\"swift\"));\n\t\tassert_eq!(case_insensitivefn(\"typescript\"), Some(\"typescript\"));\n\t\tassert_eq!(case_insensitivefn(\"Typescript\"), Some(\"typescript\"));\n\t\tassert_eq!(case_insensitivefn(\"c++\"), Some(\"cpp\"));\n\t\tassert_eq!(case_insensitivefn(\"C++\"), Some(\"cpp\"));\n\t\tassert_eq!(case_insensitivefn(\"python\"), Some(\"python\"));\n\t\tassert_eq!(case_insensitivefn(\"Python\"), Some(\"python\"));\n\n\t}\n}\n\n#[cfg(test)]\nmod fuzzymatch {\n\tuse crate::fuzzy;\n\t\n\t#[test]\n\tfn postgres() {\n\t\tassert_eq!(fuzzy(\"Postgres\"), Some(\"pgsql\"));\n\t}\n\t\n\t#[test]\n\tfn objectivec() {\n\t\tassert_eq!(fuzzy(\"Objective\"), Some(\"objectivec\"));\n\t\tassert_eq!(fuzzy(\"Objective C\"), Some(\"objectivec\"));\n\t}\n\t\n\t#[test]\n\tfn scad() {\n\t\tassert_eq!(fuzzy(\"SCAD\"), Some(\"openscad\"));\n\t}\n\t\n\t#[test]\n\tfn powershell() {\n\t\tassert_eq!(fuzzy(\"pwsh\"), Some(\"powershell\"));\n\t}\n\t\n\t#[test]\n\tfn protobuf() {\n\t\tassert_eq!(fuzzy(\"protobuf\"), Some(\"protobuf\"));\n\t\tassert_eq!(fuzzy(\"probuf\"), Some(\"protobuf\"));\n\t\tassert_eq!(fuzzy(\"pbuf\"), Some(\"protobuf\"));\n\t\tassert_eq!(fuzzy(\"ProtoBuffer\"), Some(\"protobuf\"));\n\t\tassert_eq!(fuzzy(\"Proto Buffer\"), Some(\"protobuf\"));\n\t}\n\t\n\t#[test]\n\tfn plaintext() {\n\t\tassert_eq!(fuzzy(\"Plain\"), Some(\"plaintext\"));\n\t}\n}"
}
